            className="w-1/2 rounded-lg border border-white/40 dark:border-gray-700/40 bg-white/30 dark:bg-gray-900/30 backdrop-blur-sm px-3 py-2 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400"
          />
        </div>

        {/* Website (optional) */}
        <input
          type="url"
          name="website"
          placeholder="Website (optional)"
          value={form.website}
          onChange={handleChange}
          className="w-full rounded-lg border border-white/40 dark:border-gray-700/40 bg-white/30 dark:bg-gray-900/30 backdrop-blur-sm px-3 py-2 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400"
        />

        {/* Opening hours */}
        <div className="space-y-3 rounded-2xl border border-white/40 dark:border-gray-700/40 bg-white/25 dark:bg-gray-900/30 px-4 py-4">
          <div className="flex flex-col gap-1">
            <h2 className="text-sm font-semibold text-gray-900 dark:text-gray-100">
              Opening hours (optional)
            </h2>
            <p className="text-xs text-gray-600 dark:text-gray-400">
              Add one or more time ranges per day. Leave unchecked for closed days.
            </p>
          </div>
          <div className="space-y-3">
            {WEEKDAYS.map((day) => {
              const ranges = hours[day.value];
              const enabled = ranges.length > 0;
              return (
                <div
                  key={day.value}
                  className="flex flex-col gap-3 rounded-xl border border-white/40 bg-white/35 px-3 py-3 dark:border-gray-700/50 dark:bg-gray-900/35 sm:flex-row sm:items-center sm:justify-between"
                >
                  <label className="flex items-center gap-2 text-sm font-medium text-gray-900 dark:text-gray-100">
                    <input
                      type="checkbox"
                      checked={enabled}
                      onChange={(event) => toggleDay(day.value, event.target.checked)}
                      className="h-4 w-4 rounded border-gray-300 text-blue-500 focus:ring-blue-400"
                    />
                    {day.label}
                  </label>
                  {enabled ? (
                    <div className="flex w-full flex-col gap-3">
                      {ranges.map((range, index) => (
                        <div key={`${day.value}-${index}`} className="flex flex-wrap items-center gap-3">
                          <label className="flex items-center gap-2 text-xs text-gray-600 dark:text-gray-300">
                            Open
                            <TimePickerInput
                              value={range.open}
                              onChange={(newValue) => updateRange(day.value, index, "open", newValue)}
                            />
                          </label>
                          <label className="flex items-center gap-2 text-xs text-gray-600 dark:text-gray-300">
                            Close
                            <TimePickerInput
                              value={range.close}
                              onChange={(newValue) => updateRange(day.value, index, "close", newValue)}
                            />
                          </label>
                          <button
                            type="button"
                            onClick={() => removeRange(day.value, index)}
                            className="rounded-full border border-white/50 bg-white/70 px-3 py-1 text-xs font-medium text-[#1d2742] transition hover:scale-[1.01]"
                          >
                            Remove
                          </button>
                        </div>
                      ))}
                      <button
                        type="button"
                        onClick={() => addRange(day.value)}
                        className="self-start rounded-full border border-white/60 bg-white/70 px-3 py-1 text-xs font-medium text-[#1d2742] transition hover:scale-[1.01]"
                      >
                        Add another range
                      </button>
                    </div>
                  ) : (
                    <p className="text-xs text-gray-500 dark:text-gray-400">Closed</p>
                  )}
                </div>
              );
            })}
          </div>
        </div>

        {/* Submit button */}
        <button
          type="submit"
          disabled={loading}
          className="w-full py-2 rounded-lg bg-white/30 dark:bg-gray-700/40 backdrop-blur-md border border-white/40 dark:border-gray-600/40 shadow-md text-gray-900 dark:text-gray-100 font-semibold transition-transform duration-200 hover:scale-105 active:scale-95"
        >
          {loading ? "Submitting..." : "Submit Spot"}
        </button>

        {/* Feedback */}
        {success && <p className="text-green-600 dark:text-green-400 text-sm">{success}</p>}
        {error && <p className="text-red-600 dark:text-red-400 text-sm">{error}</p>}
      </form>
    </main>
  );
}
